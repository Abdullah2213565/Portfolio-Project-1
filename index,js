const projects1 = [
  {
    name: 'Data Dashboard Health Care',
    popupName: 'Multi Post Stories',
    description:
      "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
    featuredImage: '(./images/Card-works.png)',
    popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
      industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
      make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
    popupImage: './images/Snapshoot-desktop.png',
    technologies: ['html', 'bootstrap', 'ruby and rails'],
    liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
    sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
    id: '1',
  },
  {
    name: 'Data Dashboard Health Care',
    popupName: 'Multi Post Stories',
    description:
      "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
    featuredImage: '(./images/Card-works.png)',
    popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
      industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
      make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
    popupImage: './images/Snapshoot-desktop.png',
    technologies: ['html', 'bootstrap', 'ruby and rails'],
    liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
    sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
    id: '2',
  },
  {
    name: 'Data Dashboard Health Care',
    popupName: 'Multi Post Stories',
    description:
      "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
    featuredImage: '(./images/Card-works.png)',
    popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
      industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
      make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
    popupImage: './images/Snapshoot-desktop.png',
    technologies: ['html', 'bootstrap', 'ruby and rails'],
    liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
    sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
    id: '3',
  },
  {
    name: 'Data Dashboard Health Care',
    popupName: 'Multi Post Stories',
    description:
      "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
    featuredImage: '(./images/Card-works.png)',
    popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
      industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
      make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
    popupImage: './images/Snapshoot-desktop.png',
    technologies: ['html', 'bootstrap', 'ruby and rails'],
    liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
    sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
    id: '4',
  },
  {
    name: 'Data Dashboard Health Care',
    popupName: 'Multi Post Stories',
    description:
      "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
    featuredImage: '(./images/Card-works.png)',
    popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
      industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
      make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
    popupImage: './images/Snapshoot-desktop.png',
    technologies: ['html', 'bootstrap', 'ruby and rails'],
    liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
    sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
    id: '5',
  },
  {
    name: 'Data Dashboard Health Care',
    popupName: 'Multi Post Stories',
    description:
      "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
    featuredImage: '(./images/Card-works.png)',
    popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
      industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
      make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
    popupImage: './images/Snapshoot-desktop.png',
    technologies: ['html', 'bootstrap', 'ruby and rails'],
    liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
    sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
    id: '6',
  },
];
  
const projects2 = [
    {
      name: 'Data Dashboard Health Care',
      popupName: 'Multi Post Stories',
      description:
        "A daily selection of privately personalized reads; no accounts or sign-ups required has been the industry's standard",
      featuredImage: '(./images/Card-works.png)',
      popupDescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the 
        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to 
        make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essent`,
      popupImage: './images/Snapshoot-desktop.png',
      technologies: ['html', 'bootstrap', 'ruby and rails'],
      liveLink: 'https://github.com/Abdullah2213565/Portfolio-Project-1/',
      sourceFile: 'https://github.com/Abdullah2213565/Portfolio-Project-1',
      id: 'x1', 
    }];

const LocalStore = (() => {
    function useStorageInfo() {
        const currentInformation = JSON.parse(localStorage.getItem('contactInfo'));
        document.getElementById('visitors-name').value = currentInformation.fullName;
        document.getElementById('visitors-email').value = currentInformation.email;
        document.getElementById('contact-text-area').value = currentInformation.message;
    }
    
    function setStorage() {
        const contactInfo = {
        fullName: document.getElementById('visitors-name').value,
        email: document.getElementById('visitors-email').value,
        message: document.getElementById('contact-text-area').value,
        };
        localStorage.setItem('contactInfo', JSON.stringify(contactInfo));
        useStorageInfo();
    }
    
    return { setStorage, useStorageInfo };
    })();

    const DOM = (() => {
    function createElement(elem, className = null) {
        const element = document.createElement(elem);
        if (className !== null) {
        element.classList.add(className);
        }
        return element;
    }

    const CreateCloseIcon = (location, closeWrap) => {
        const closeIcon = createElement('img', 'close-icon');
        const closeWrapper = createElement(closeWrap, 'close-icon-wrapper');
        closeIcon.src = './icon2/close-icon.png';
        closeIcon.alt = 'close icon';
        closeWrapper.appendChild(closeIcon);
        location.appendChild(closeWrapper);
    };

    const CardContainer = document.getElementById('Card-container');
    const CreateProjectCard = (project) => {
        const ListItem = createElement('li', 'project-card');
        ListItem.style.background = `${project.featuredImage}`;
        ListItem.id = project.id;
    
        const projectName = createElement('h3');
        projectName.textContent = `${project.name}`;
    
        const projectDescription = createElement('p');
        projectDescription.textContent = `${project.description}`;
    
        const techList1 = createElement('li');
        techList1.textContent = `${project.technologies[0]}`;
        const techList2 = createElement('li');
        techList2.textContent = `${project.technologies[1]}`;
        const techList3 = createElement('li');
        techList3.textContent = `${project.technologies[2]}`;
        const techUL = createElement('ul', 'description-tags');
        techUL.appendChild(techList1);
        techUL.appendChild(techList2);
        techUL.appendChild(techList3);
    
        const cardDescription = createElement('div', 'card-description');
        cardDescription.appendChild(projectName);
        cardDescription.appendChild(projectDescription);
        cardDescription.appendChild(techUL);
    
        const ProjectBtn = createElement('button', 'btn-card');
        ProjectBtn.classList.add('btn');
        ProjectBtn.type = 'button';
        ProjectBtn.textContent = 'See Project';
        ListItem.appendChild(cardDescription);
        ListItem.appendChild(ProjectBtn);
        return ListItem;
    };

    projects1.map((project) => CardContainer.appendChild(CreateProjectCard(project)));

    const createPopupWindow = (project) => {
      const projectModal = createElement('div', 'project-modal');
      const popupContainer = createElement('div', 'popup-container');
      popupContainer.innerHTML = `
              <h2>${project.popupName}</h2>
              <ul class="tech-stack">
                ${project.technologies.map((tech) => `<li>${tech}</li>`)}
              </ul>
              <div class="popup-img-p">
                  <img src="${project.popupImage}" alt="${project.name}">
                  <div class="popup-btn-wrapper">
                      <p>${project.popupDescription}</p>
                      
                      <div class="pop-btn-wrap">
                        <button class="btn popup-btn" type="button">
                            <a href="${project.liveLink}">See Live
                            <img src="./icon2/new-window.png" alt="New window icon">
                            </a>                        
                        </button>
                        <button class="btn popup-btn" type="button">
                            <a href="${project.sourceFile}">See Source
                            <img src="./icon2/Icon-GitHub.png" alt="github icon">
                            </a>                        
                        </button>
                      </div>
                  </div>
              </div>
          `;
      projectModal.appendChild(popupContainer);
      return projectModal;
    };

    const HamburgerButton = document.querySelector('.hamburger-btn');
    const navLinksWrapper = document.getElementById('nav-links');
    const ProjectButtons = document.querySelectorAll('.btn-card');
    const WorkSection = document.getElementById('recent-works');

  return {
    createElement,
    CreateCloseIcon,
    createPopupWindow,
    HamburgerButton,
    navLinksWrapper,
    CardContainer,
    ProjectButtons,
    WorkSection,
  };
})();

const formValidation = () => {
    const email = document.getElementById('visitors-email');
    const form = document.getElementById('contact-form');

    function showMessage(text, className) {
        let message;
        if (!document.querySelector('.email-check-message')) {
        message = DOM.createElement('small', 'email-check-message');
        message.classList.add(className);
        } else {
        message = document.querySelector('.email-check-message');
        message.classList.replace(className, className);
        }
        message.textContent = text;
        const submitButton = document.querySelector('.btn-form-submit');
        form.insertBefore(message, submitButton);
    }
    function validateEmail() {
        const emailValue = email.value.trim();
        const lowerCaseEmail = emailValue.toLowerCase();
    
        if (emailValue !== lowerCaseEmail) {
          showMessage('The Email should be lowercase', 'invalid-email');
          return false;
        }
        return true;
      }
    
      function removeMessageOnFocus() {
        const message = document.querySelector('.email-check-message');
        if (message) {
          message.remove();
        }
      }
    
      function handleSubmit(e) {
        e.preventDefault();
        if (validateEmail()) {
          form.submit();
        }
  email.addEventListener('change', validateEmail);
  email.addEventListener('focus', removeMessageOnFocus);
  form.addEventListener('submit', handleSubmit);
};
formValidation();


];